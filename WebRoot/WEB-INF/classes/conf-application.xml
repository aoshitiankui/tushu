<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.1.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.1.xsd 
	http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd ">
	<!--扫描com包下所有除标注@Controller的服务组件-->

	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>  
				<value>classpath:/jdbc.properties</value>  
			</list>  
		</property>
	</bean>
<bean id="masterDataSource" name="masterDataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">  
        <property name="driverClass" value="${jdbc.driverClassName}" />  
        <property name="jdbcUrl" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
        <!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->  
        <property name="idleConnectionTestPeriodInMinutes" value="5" />  
        <!-- 测试sql 根据不同的数据库写对于的 如mysql  select 1  oracle select 1 from dual -->
        <property name="connectionTestStatement" value="${jdbc.test}" />
        <!-- 设置连接的存活时间 正在使用的连接不受影响
        <property name="maxConnectionAge" value="600000" />  -->
       <!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->  
        <property name="idleMaxAgeInMinutes" value="5" />  
        <!-- 每个分区最大的连接数 -->  
        <property name="maxConnectionsPerPartition" value="20" />  
        <!-- 每个分区最小的连接数 -->  
        <property name="minConnectionsPerPartition" value="2" />  
        <!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定-->  
        <property name="partitionCount" value="4" />  
        <!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->  
        <property name="acquireIncrement" value="2" />  
        <!-- 缓存prepared statements的大小，默认值：0 -->  
        <property name="statementsCacheSize" value="0" />  
        <!-- 每个分区释放链接助理进程的数量，默认值：3，除非你的一个数据库连接的时间内做了很多工作，不然过多的助理进程会影响你的性能 -->  
        <property name="releaseHelperThreads" value="3" />  
    </bean> 
	<!--事物管理器-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="masterDataSource" />
	</bean>
	<!--事物增强-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />  
			<tx:method name="upd*" propagation="REQUIRED" />  
			<tx:method name="del*" propagation="REQUIRED" />  
			<tx:method name="save*" propagation="REQUIRED" />  
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" read-only="false" />
		</tx:attributes>
	</tx:advice>
	<aop:config expose-proxy="true" >
		<aop:pointcut id="serviceMethod"  expression="execution(* com.dao..*.*(..))"/>
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" order="2"/>
	</aop:config>
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">  
       <property name="dataSource" ref="masterDataSource" />  
       <property name="configLocation" value="classpath:/mybatis.xml"/>  
       <!-- <property name="mapperLocations" value="classpath:com/vito/buss/*/*Mapper.xml" />  --> 
    </bean> 
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
	    <property name="basePackage" value="com.dao"/>  
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>  
	</bean>  
</beans>